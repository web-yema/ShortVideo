<template>
	<view :style="{height: screenHeight}" class="content">
		<index-header></index-header>
		<!--首页头部导航栏组件-->
		<view class="video-list" :style="{height: screenHeight}">
			<swiper class="swiper-box" :style="{height: screenHeight}" :vertical="true" :indicator-dots="false" :duration="200"
			 :current="videoIndex" @change="handleSlider">
				<swiper-item v-for="(item, index) in vlist" :key="index">
					<view class="uni_vdplayer" :style="{height: screenHeight}">
						<video @click.stop="handleClicked" :autoplay="true" :id="'myVideo' + index" ref="players" class="player-video" :src="item.src"
						 :controls="false" :loop="true" :show-center-play-btn="false" objectFit="fill">
							<!-- :show-center-play-btn="false" 隐藏video播放按钮 -->
						</video>
						<!-- 中间播放按钮 -->
						<view class="flexbox" @click="handleClicked(index)" v-if="!isPlay">
							<image class="vd-cover" src="../../static/homeimg/play@x1.png" mode=""></image>
						</view>
						<functionbox class="userget" />
					</view>
				</swiper-item>
			</swiper>
		</view>
	</view>
</template>
<script>
	import IndexHeader from './index-header.vue';
	import functionbox from './functionbox.vue';
	const videoJson = require('./mock-video.js');
	console.log(videoJson)
	let timer = null;
	export default {
		components: {
			'index-header': IndexHeader,
			functionbox
		},
		data() {
			return {
				videoIndex: 0,
				vlist: videoJson,
				isPlay: false, //当前视频是否播放中
				clickNum: 0,
				screenHeight: 0,
				screenWidth: 0
				//记录点击次数
			};
		},
		onLoad() {

		},
		mounted() {
			this.init();
			let height = 0
			let width = 0
			uni.getSystemInfo({
				success(res) {
					height = res.screenHeight - 50 + 'px';
					width = res.screenWidth + 'px';
				}
			})
			this.screenHeight = height
			this.screenWidth = width
		},
		methods: {
			init() {
				setTimeout(() => {
					this.play(this.videoIndex);
				}, 200);
			},
			handleSlider(e) {
				// 滑动切换
				let curIndex = e.detail.current;
				this.play(e)
				if (curIndex === this.videoIndex + 1) {
					console.log('向上滑动');
					this.$refs.players[this.videoIndex + 1].play(); // 下一个开始播放并且从头开始播放
					this.$refs.players[this.videoIndex].pause(); // 当前视频暂停播放
				} else if (curIndex === this.videoIndex - 1) {
					console.log('向下滑动');
					this.$refs.players[this.videoIndex - 1].play(); // 上一个开始播放并且从头开始播放
					this.$refs.players[this.videoIndex].pause(); // 当前视频暂停播放
				}
				this.videoIndex = curIndex;
			},
			play(index) {
				// 播放
				this.$refs.players[this.videoIndex].play();
				this.isPlay = true;
			},
			// 暂停
			pause(index) {
				this.$refs.players[this.videoIndex].pause();
				this.isPlay = false;
			},
			// 点击视频事件
			handleClicked(index) {
				if (timer) {
					clearTimeout(timer);
				}
				this.clickNum++;
				timer = setTimeout(() => {
					if (this.clickNum >= 2) {
						console.log('双击视频');
					} else {
						console.log('单击视频');
						if (this.isPlay) {
							this.pause(index);
						} else {
							this.play(index);
						}
					}
					this.clickNum = 0;
				}, 300);
			}
		}
	};
</script>

<style>
	.content {
		flex: 1;
		flex-direction: column;
		/* overflow: hidden; */
		background-color: #fff;
	}

	.video-list {
		width: 750upx;
		flex-direction: column;
		background-color: #007AFF;
		flex: 1;
	}

	.swiper-box {
		flex-direction: column;
		flex: 1;
	}

	.swiper-item {
		flex-direction: column;
		flex: 1;
	}

	.uni_vdplayer {
		position: relative;
		flex-direction: column;
		flex: 1;
		background-color: black;

	}

	.player-video {
		width: 750upx;
		flex-direction: column;
		flex: 1;

	}

	.flexbox {
		position: absolute;
		top: 280px;
		left: 160%;
		height: 750px;
		text-align: center;
	}

	.vd-cover {
		width: 60px;
		height: 60px;
		opacity: 0.6;
	}

	.userget {
		position: absolute;
		right: 0rpx;
		bottom: 150rpx;
		height: 560rpx;
		width: 100rpx;
		z-index: 1000000;
	}
	.uni-video-video{
		/* height: auto !important; */
	}
</style>
